name: Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Test Suite"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create production environment template
      run: |
        echo "# Production Environment Variables" > .env.production.template
        echo "NODE_ENV=production" >> .env.production.template
        echo "PORT=5000" >> .env.production.template
        echo "JWT_SECRET=your-jwt-secret-here" >> .env.production.template
        echo "MONGO_URI=your-mongodb-connection-string" >> .env.production.template
        
    # Deploy to Vercel
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    # Alternative: Deploy to Railway
    - name: Deploy to Railway
      uses: bervProject/railway-deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}
        
    # Alternative: Deploy to Render
    - name: Deploy to Render
      run: |
        curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
        
    - name: Notify deployment status
      run: |
        echo "Deployment completed successfully!"
        echo "Environment: Production"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}" 